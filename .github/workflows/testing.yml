name: Testing

on:
  push:
    branches:
      - main
  pull_request:
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Install Dependencies
        run: poetry install
      - name: Ruff format check
        run: poetry run ruff format open_edc tests --check
      - name: Lint with ruff
        run: poetry run ruff check .
      - name: mypy check
        run: poetry run mypy .
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          target: prod
          tags:
            backend:prod
            # outputs: type=docker,dest=/tmp/open_edc.tar
          push:
            false
            # - name: Upload artifact
            #   uses: actions/upload-artifact@v3
            #   with:
            #     name: open-edc
            #     path: /tmp/open_edc.tar
            #     retention-days: 1
  testing:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install Poetry
        run: pipx install poetry
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install Dependencies
        run: poetry install
      - name: Test with pytest
        run: just test-ci
